"use strict";(self.webpackChunknumpower=self.webpackChunknumpower||[]).push([[9739],{3905:(e,r,a)=>{a.d(r,{Zo:()=>s,kt:()=>y});var t=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function i(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?i(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function l(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=t.createContext({}),c=function(e){var r=t.useContext(p),a=r;return e&&(a="function"==typeof e?e(r):o(o({},r),e)),a},s=function(e){var r=c(e.components);return t.createElement(p.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(a),d=n,y=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return a?t.createElement(y,o(o({ref:r},s),{},{components:a})):t.createElement(y,o({ref:r},s))}));function y(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3313:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=a(7462),n=(a(7294),a(3905));const i={},o="NDArray Creation",l={unversionedId:"tutorial-basics/ndarray-creation",id:"tutorial-basics/ndarray-creation",title:"NDArray Creation",description:"You can create an NDArray using one of the following ways:",source:"@site/docs/tutorial-basics/0-ndarray-creation.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/ndarray-creation",permalink:"/docs/tutorial-basics/ndarray-creation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/0-ndarray-creation.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fundamentals",permalink:"/docs/category/fundamentals"},next:{title:"Indexing & Slicing",permalink:"/docs/tutorial-basics/ndarray-indexing"}},p={},c=[{value:"Convert PHP Array to NDArray",id:"convert-php-array-to-ndarray",level:2},{value:"Creating NDArray with initializers",id:"creating-ndarray-with-initializers",level:2},{value:"Creating NDArray with an image",id:"creating-ndarray-with-an-image",level:2}],s={toc:c},u="wrapper";function m(e){let{components:r,...a}=e;return(0,n.kt)(u,(0,t.Z)({},s,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"ndarray-creation"},"NDArray Creation"),(0,n.kt)("p",null,"You can create an NDArray using one of the following ways:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"From a PHP array"),(0,n.kt)("li",{parentName:"ul"},"Using one of the initialization methods like ",(0,n.kt)("inlineCode",{parentName:"li"},"NDArray::ones")),(0,n.kt)("li",{parentName:"ul"},"From a GD image")),(0,n.kt)("h2",{id:"convert-php-array-to-ndarray"},"Convert PHP Array to NDArray"),(0,n.kt)("p",null,"In the example below we will create a matrix of size ",(0,n.kt)("inlineCode",{parentName:"p"},"2 x 2")," from an array in PHP"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"use \\NDArray as nd;\n\n$ndarray = new nd([[1, 2], [3, 4]]);\n")),(0,n.kt)("h2",{id:"creating-ndarray-with-initializers"},"Creating NDArray with initializers"),(0,n.kt)("p",null,"You can also use one of several available initialization methods, below we will initialize a ",(0,n.kt)("inlineCode",{parentName:"p"},"2 x 4 x 4")," ",(0,n.kt)("inlineCode",{parentName:"p"},"NDArray"),"\nfull of ones."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nuse \\NDArray as nd;\n\n$ndarray = nd::ones([2, 4, 4]);\nprint_r($ndarray);\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'@title="Output"',"@title":'"Output"'},"[[[1, 1, 1, 1],\n  [1, 1, 1, 1],\n  [1, 1, 1, 1],\n  [1, 1, 1, 1]],\n [[1, 1, 1, 1],\n  [1, 1, 1, 1],\n  [1, 1, 1, 1],\n  [1, 1, 1, 1]]]\n")),(0,n.kt)("h2",{id:"creating-ndarray-with-an-image"},"Creating NDArray with an image"),(0,n.kt)("p",null,"If you want to work with images, NumPower offers a quick way to perform image processing.\nYou can initialize an NDArray from a GD image:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"<?php\nuse \\NDArray as nd;\n\n// Use GD to load the image\n$originalImage = imagecreatefromjpeg('test_img.jpg');\n\n// Initialize our GD image (1200x1920) NDArray\n$image_array = nd::array($originalImage);\nprint_r($image_array->shape());\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php",metastring:'@title="Output"',"@title":'"Output"'},"Array\n(\n    [0] => 3\n    [1] => 1200\n    [2] => 1920\n)\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"For now, all images are processed in RGB format,\nwe will work to implement other formats like CMYK and ARGB.")))}m.isMDXComponent=!0}}]);