"use strict";(self.webpackChunknumpower=self.webpackChunknumpower||[]).push([[8789],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),m=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=m(r),d=a,g=c["".concat(l,".").concat(d)]||c[d]||s[d]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:a,i[1]=p;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3988:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>m});var n=r(7462),a=(r(7294),r(3905));const o={},i="NDArray::toImage",p={unversionedId:"image-support/ndarray-toimage",id:"image-support/ndarray-toimage",title:"NDArray::toImage",description:"Convert an array of shape (3, h, w) to a PHP-GD RGB image.",source:"@site/api/image-support/ndarray-toimage.mdx",sourceDirName:"image-support",slug:"/image-support/ndarray-toimage",permalink:"/api/image-support/ndarray-toimage",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Introduction",permalink:"/api/image-support/introduction"},next:{title:"Low-level debug",permalink:"/api/category/low-level-debug"}},l={},m=[{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},c=u("Tabs"),s=u("TabItem"),d={toc:m},g="wrapper";function y(e){let{components:t,...r}=e;return(0,a.kt)(g,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ndarraytoimage"},"NDArray::toImage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function toImage(): GdImage;\n")),(0,a.kt)("p",null,"Convert an array of shape ",(0,a.kt)("inlineCode",{parentName:"p"},"(3, h, w)")," to a PHP-GD RGB image."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("h4",{parentName:"admonition",id:"php-gd-required"},"PHP-GD REQUIRED"),(0,a.kt)("p",{parentName:"admonition"},"The PHP-GD extension must be installed during NumPower compilation for this function to be available.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("h4",{parentName:"admonition",id:"gpu-supported"},"GPU SUPPORTED"),(0,a.kt)("p",{parentName:"admonition"},"This operation is supported by GPU (VRAM) and contains a custom CUDA kernel.")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)(c,{mdxType:"Tabs"},(0,a.kt)(s,{value:"example1",label:"Example 1",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},'use \\NDArray as nd;\n\n$gd_image_array = nd::array(imagecreatefromjpeg("test_img.jpg"));\n\nprint_r($gd_image_array->shape());\n\n// Your operations here\n// ...\n// End of operations\n\n$gd_image = $gd_image_array->toImage();\nprint_r($gd_image); // Now we have a GD image\nimagejpeg($gd_image, "out.jpg"); // Save the image\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"Array\n(\n    [0] => 3\n    [1] => 1200\n    [2] => 1920\n)\nGdImage Object\n(\n)\n")))))}y.isMDXComponent=!0}}]);